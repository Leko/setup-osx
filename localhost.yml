- hosts: localhost
  connection: local
  gather_facts: no           
  become: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/versions
      - homebrew/dupes
      - caskroom/cask
      - caskroom/versions
    homebrew_packages:
      - { name: readline }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: bash }
      - { name: git }
      - { name: cowsay }
      - { name: docker }
      - { name: docker-machine }
      - { name: doxygen }
      - { name: apple-gcc42 }
      - { name: gnu-sed }
      - { name: graphviz }
      - { name: jq }
      - { name: mecab }
      - { name: mecab-ipadic }
      - { name: nkf }
      - { name: nmap }
      - { name: packer }
      - { name: sqlite }
      - { name: tree }
      - { name: unrar }
      - { name: vim }
      - { name: wget }
      - { name: coreutils }
      - { name: bash-completion }
      - { name: argon/mas/mas }
    homebrew_cask_packages:
      - { name: alfred }
      - { name: dash }
      - { name: flash-player }
      - { name: quicklook-csv }
      - { name: quicklook-json }
      - { name: heroku-toolbelt }
      - { name: adobe-creative-cloud }
      - { name: appcleaner }
      - { name: cyberduck }
      - { name: evernote }
      - { name: firefox }
      - { name: google-chrome }
      - { name: google-japanese-ime }
      - { name: iterm2 }
      - { name: karabiner }
      - { name: mysqlworkbench }
      - { name: sequel-pro }
      - { name: sublime-text }
      - { name: vagrant }
      - { name: virtualbox }
      - { name: xmind }
      - { name: spectacle }
      - { name: skype }
      - { name: recordit }
      - { name: coteditor }
      # Fonts
      # https://github.com/caskroom/homebrew-fonts/tree/master/Casks
      - { name: font-source-code-pro }
      - { name: font-source-han-code-jp }
    anyenv_languages:
      - rbenv
      - phpenv
      - goenv
      - ndenv
    osx_defaults_settings:
      # 保存ダイアログを詳細表示で開く
      - domain: NSGlobalDomain
        key: NSNavPanelExpandedStateForSaveMode
        type: bool
        value: true
      # 印刷ダイアログを詳細表示で開く
      - domain: NSGlobalDomain
        key: PMPrintingExpandedStateForPrint
        type: bool
        value: true
      # 最近使ったフォルダを10個まで記録(デフォルトは5個)
      - domain: NSGlobalDomain
        key: NSNavRecentPlacesLimit
        type: int
        value: 10
      # show all files
      - domain: com.apple.finder
        key: AppleShowAllFiles
        type: bool
        value: True
      # テキストの選択を有効化
      - domain: com.apple.finder
        key: QLEnableTextSelection
        type: bool
        value: true
      # 他のアプリに切り替えたらQuickLookを終了
      - domain: com.apple.finder
        key: QLHidePanelOnDeactivate
        type: bool
        value: true
      # ネットワークボリュームに.DS_Storeを作らない
      - domain: com.apple.desktopservices
        key: DSDontWriteNetworkStores
        type: bool
        value: true
      # ファイルを開く際の警告ダイアログを無効にする
      - domain: com.apple.LaunchServices
        key: LSQuarantine
        type: bool
        value: false
      # Dockが表示されるまでの遅延を無くす
      - domain: com.apple.dock
        key: autohide-delay
        type: float
        value: 0
      # Dockが隠れるアニメーションの速度を0.5秒に
      - domain: com.apple.dock
        key: autohide-time-modifier
        type: float
        value: 0.5
      # Dockのサイズを50px?に
      - domain: com.apple.dock
        key: tilesize
        type: float
        value: 50.0
      # 起動中のアプリのみDockに表示
      - domain: com.apple.dock
        key: static-only
        type: boolean
        value: true
      # Dashboardを無効にする
      - domain: com.apple.dashboard
        key: mcx-disabled
        type: bool
        value: true
    php_versions:
      - { version: 7 }
      - { version: 5.6, global: true }
      - { version: 5.1.2 }
    node_versions:
      - { version: 1.12 }
      - { version: 4.4, global: true }
      - { version: 5.10 }
    go_versions:
      - { version: 1.6, global: true }
    ruby_versions:
      - { version: 2.3, global: true }
    npm_packages:
      - { name: babel-cli, global: true }
      - { name: bower, global: true }
      - { name: daff, global: true }
      - { name: faker-cli, global: true }
      - { name: release-changelog, global: true }
      - { name: yeoman, global: true }
    go_packages:
      - github.com/motemen/ghq
      - github.com/peco/peco/cmd/peco
    gem_packages:
      - bundler
      - sqlite3
    symlinks:
      - { path: files/.bashrc, dest: ~/.bashrc }
      - { path: files/.gemrc, dest: ~/.gemrc }
      - { path: files/.gitconfig, dest: ~/.gitconfig }
      - { path: files/.gitattributes, dest: ~/.gitattributes }
      - { path: files/.bundle, dest: ~/.bundle/config }
    alfred_workflows:
      - 'https://raw.github.com/willfarrell/alfred-pkgman-workflow/master/Package%20Managers.alfredworkflow'
      - 'https://raw.github.com/willfarrell/alfred-caniuse-workflow/master/caniuse.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/com.cnsworder.vbox/vbox.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/tylereich.colors/colors_v2.0.1.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/mn.frd.alfred-dongers/dongers.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/dk.rodalgaard.alfred.network/network.alfredworkflow'
      - 'https://dl.dropboxusercontent.com/u/48987130/alfred_workflows/hatebu_for_alfred.alfredworkflow'
      - 'https://dl.dropboxusercontent.com/u/48987130/alfred_workflows/Markdown%20Link%20Generator.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/net.deanishe.alfred-stackoverflow/stackoverflow-1.2.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/com.ravelll.wifi/wi-fi.alfredworkflow'
    downloads:
      - url: 'http://ethanschoonover.com/solarized/files/solarized.zip'
        dest: ~/Downloads

  tasks:
    - name: Override OSX default settings
      osx_defaults: >
        key={{ item.key }}
        type={{ item.type }}
        value={{ item.value }}
        domain={{ item.domain }}
      with_items: '{{ osx_defaults_settings }}'
      notify: killall

    - name: Create .bundle
      file: path=~/.bundle state=directory

    - name: Remove exists file
      file: dest={{ item.dest }} state=absent
      with_items: '{{ symlinks }}'

    - name: Link dot files
      file: src={{ playbook_dir }}/{{ item.path }} dest={{ item.dest }} state=link
      with_items: '{{ symlinks }}'

    - name: Install anyenv
      git:
        repo: https://github.com/riywo/anyenv 
        dest: ~/.anyenv

    - name: Enable anyenv
      shell: source ~/.bashrc

    - name: Enable anyenv
      file: path=~/.anyenv/envs state=directory

    - name: Install anyenv languages
      shell: ~/.anyenv/bin/anyenv install {{ item }} && exec $SHELL -l creates=~/.anyenv/envs/{{ item }}
      with_items: '{{ anyenv_languages }}'

    - name: XXXXXXXXXXXXX
      shell: ls ~/.anyenv/envs/{{ item }}
      with_items: '{{ anyenv_languages }}'

    - name: Install php versions
      shell: ~/.anyenv/envs/phpenv/bin/phpenv install {{ item.version }}
      with_items: '{{ php_versions }}'

    - name: Install node versions
      shell: ~/.anyenv/envs/ndenv/bin/ndenv install {{ item.version }}
      with_items: '{{ node_versions }}'

    - name: Install go versions
      shell: ~/.anyenv/envs/goenv/bin/goenv install {{ item.version }}
      with_items: '{{ go_versions }}'

    - name: Install ruby versions
      shell: ~/.anyenv/envs/rbenv/bin/rbenv install {{ item.version }}
      with_items: '{{ ruby_versions }}'

    - name: Set php version to {{ item.version }}
      shell: ~/.anyenv/envs/phpenv/bin/phpenv install {{ item.version }}
      with_items: '{{ php_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set node version to {{ item.version }}
      shell: ~/.anyenv/envs/ndenv/bin/ndenv install {{ item.version }}
      with_items: '{{ node_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set go version to {{ item.version }}
      shell: ~/.anyenv/envs/goenv/bin/goenv install {{ item.version }}
      with_items: '{{ go_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set ruby version to {{ item.version }}
      shell: ~/.anyenv/envs/rbenv/bin/rbenv install {{ item.version }}
      with_items: '{{ ruby_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Install go packages
      command: go get {{ item }}
      with_items: '{{ go_packages }}'

    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items: '{{ gem_packages }}'

    - name: Install npm packages
      npm: >
        name={{ item.name }}
        production=yes
        global={{ item.global | default(False) }}
        state={{ item.state | default('latest') }}
      with_items: '{{ npm_packages }}'

    - name: Homebrew taps
      homebrew_tap: tap={{ item }} state=present
      with_items: '{{ homebrew_taps }}'

    - name: Update Homebrew
      homebrew: update_homebrew=yes

    - name: Install Homebrew packages
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: '{{ homebrew_packages }}'
      notify: brew doctor

    - name: Install Homebrew cask
      homebrew: name=brew-cask state=latest

    - name: Install Homebrew cask packages
      homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }}
      with_items: '{{ homebrew_cask_packages }}'
      notify: brew cask doctor

    - name: Show library directory
      command: chflags nohidden ~/Library

    - name: Download Alfred workflows
      get_url: url={{ item }} dest=~/Downloads/alfred
      with_items: '{{ alfred_workflows }}'

    - name: Download files
      get_url: url={{ item.url }} dest={{ item.dest }}
      with_items: '{{ downloads }}'

  handlers:
    - name: brew doctor
      command: brew doctor
    - name: brew cask doctor
      command: brew cask doctor
    - name: source
      command: source ~/.bashrc
    - name: killall 
      command: killall Finder Dock
