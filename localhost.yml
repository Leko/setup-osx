- hosts: localhost
  connection: local
  gather_facts: no           
  become: no

  roles:
    - osx

  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/versions
      - homebrew/dupes
      - caskroom/cask
      - caskroom/versions
    homebrew_packages:
      - { name: readline }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: bash }
      - { name: git }
      - { name: cowsay }
      - { name: docker }
      - { name: docker-machine }
      - { name: doxygen }
      - { name: apple-gcc42 }
      - { name: gnu-sed }
      - { name: graphviz }
      - { name: jq }
      - { name: mecab }
      - { name: mecab-ipadic }
      - { name: nkf }
      - { name: nmap }
      - { name: packer }
      - { name: sqlite }
      - { name: tree }
      - { name: unrar }
      - { name: vim }
      - { name: wget }
      - { name: coreutils }
      - { name: bash-completion }
      - { name: argon/mas/mas }
      # For PHP
      - { name: bison, version: 2.7.1 }
      - { name: re2c }
      - { name: libjpeg }
      - { name: libpng }
      - { name: libmcrypt }
      - { name: autoconf }
    homebrew_cask_packages:
      - { name: alfred }
      - { name: dash }
      - { name: flash-player }
      - { name: quicklook-csv }
      - { name: quicklook-json }
      - { name: heroku-toolbelt }
      - { name: adobe-creative-cloud }
      - { name: appcleaner }
      - { name: cyberduck }
      - { name: evernote }
      - { name: firefox }
      - { name: google-chrome }
      - { name: google-japanese-ime }
      - { name: iterm2 }
      - { name: karabiner }
      - { name: mysqlworkbench }
      - { name: sequel-pro }
      - { name: sublime-text }
      - { name: vagrant }
      - { name: virtualbox }
      - { name: xmind }
      - { name: spectacle }
      - { name: skype }
      - { name: recordit }
      - { name: coteditor }
      # Fonts
      # https://github.com/caskroom/homebrew-fonts/tree/master/Casks
      - { name: font-source-code-pro }
      - { name: font-source-han-code-jp }
    anyenv_languages:
      - rbenv
      - phpenv
      - goenv
      - ndenv
    php_versions:
      - { version: 5.6.20, global: true }
      - { version: 5.1.2 }
    node_versions:
      - { version: v0.12.13 }
      - { version: v4.4.3, global: true }
      - { version: v5.10.1 }
    go_versions:
      - { version: 1.6, global: true }
    ruby_versions:
      - { version: 1.9.3-p551 }
      - { version: 2.3.0, global: true }
    npm_packages:
      - { name: babel-cli, global: true }
      - { name: bower, global: true }
      - { name: daff, global: true }
      - { name: faker-cli, global: true }
      - { name: release-changelog, global: true }
      - { name: yeoman, global: true }
    go_packages:
      - github.com/motemen/ghq
      - github.com/peco/peco/cmd/peco
    gem_packages:
      - bundler
      - sqlite3
    symlinks:
      - { path: files/.bashrc, dest: ~/.bashrc }
      - { path: files/.gemrc, dest: ~/.gemrc }
      - { path: files/.gitconfig, dest: ~/.gitconfig }
      - { path: files/.gitattributes, dest: ~/.gitattributes }
      - { path: files/.bundle, dest: ~/.bundle/config }
    alfred_workflows:
      - 'https://raw.github.com/willfarrell/alfred-pkgman-workflow/master/Package%20Managers.alfredworkflow'
      - 'https://raw.github.com/willfarrell/alfred-caniuse-workflow/master/caniuse.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/com.cnsworder.vbox/vbox.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/tylereich.colors/colors_v2.0.1.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/mn.frd.alfred-dongers/dongers.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/dk.rodalgaard.alfred.network/network.alfredworkflow'
      - 'https://dl.dropboxusercontent.com/u/48987130/alfred_workflows/hatebu_for_alfred.alfredworkflow'
      - 'https://dl.dropboxusercontent.com/u/48987130/alfred_workflows/Markdown%20Link%20Generator.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/net.deanishe.alfred-stackoverflow/stackoverflow-1.2.alfredworkflow'
      - 'https://github.com/packal/repository/raw/master/com.ravelll.wifi/wi-fi.alfredworkflow'
    downloads:
      - url: 'http://ethanschoonover.com/solarized/files/solarized.zip'
        dest: ~/Downloads

  tasks:
    - name: Get os version
      shell: 'sw_vers | grep "10.[0-9]\{2\}"'
      register: newer_yosemite
      ignore_errors: true

    - name: Create .bundle
      file: path=~/.bundle state=directory

    - name: Remove exists file
      file: dest={{ item.dest }} state=absent
      with_items: '{{ symlinks }}'

    - name: Link dot files
      file: src={{ playbook_dir }}/{{ item.path }} dest={{ item.dest }} state=link
      with_items: '{{ symlinks }}'

    - name: Homebrew taps
      homebrew_tap: tap={{ item }} state=present
      with_items: '{{ homebrew_taps }}'

    - name: Update Homebrew
      homebrew: update_homebrew=yes

    - name: Install Homebrew packages
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: '{{ homebrew_packages }}'
      # argon/mas/mas support Yosemite+ only
      when: '{{ item.name != "argon/mas/mas" or newer_yosemite.rc == 0 }}'
      notify: brew doctor

    - name: Install Homebrew cask
      homebrew: name=brew-cask state=latest

    - name: Install anyenv
      git:
        repo: https://github.com/riywo/anyenv 
        dest: ~/.anyenv

    - name: Enable anyenv
      file: path=~/.anyenv/envs state=directory

    - name: Install anyenv languages
      shell: source ~/.bashrc && ~/.anyenv/bin/anyenv install {{ item }} && exec $SHELL -l creates=~/.anyenv/envs/{{ item }}
      with_items: '{{ anyenv_languages }}'

    - name: Install php versions
      shell: source ~/.bashrc && phpenv install {{ item.version }}
      timeout: 1800
      with_items: '{{ php_versions }}'

    - name: Install node versions
      shell: source ~/.bashrc && ndenv install {{ item.version }}
      with_items: '{{ node_versions }}'

    - name: Install go versions
      shell: source ~/.bashrc && goenv install {{ item.version }}
      with_items: '{{ go_versions }}'

    - name: Install ruby versions
      shell: source ~/.bashrc && rbenv install {{ item.version }}
      with_items: '{{ ruby_versions }}'

    - name: Set php version to {{ item.version }}
      shell: source ~/.bashrc && phpenv install {{ item.version }}
      with_items: '{{ php_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set node version to {{ item.version }}
      shell: source ~/.bashrc && ndenv install {{ item.version }}
      with_items: '{{ node_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set go version to {{ item.version }}
      shell: source ~/.bashrc && goenv install {{ item.version }}
      with_items: '{{ go_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Set ruby version to {{ item.version }}
      shell: source ~/.bashrc && rbenv install {{ item.version }}
      with_items: '{{ ruby_versions }}'
      when: '{{ item.global | default(False) }}'

    - name: Install go packages
      command: go get {{ item }}
      with_items: '{{ go_packages }}'

    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items: '{{ gem_packages }}'

    - name: Install npm packages
      npm: >
        name={{ item.name }}
        production=yes
        global={{ item.global | default(False) }}
        state={{ item.state | default('latest') }}
      with_items: '{{ npm_packages }}'

    - name: Install Homebrew cask packages
      homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }}
      with_items: '{{ homebrew_cask_packages }}'
      notify: brew cask doctor

    - name: Download Alfred workflows
      get_url: url={{ item }} dest=~/Downloads/alfred
      with_items: '{{ alfred_workflows }}'

    - name: Download files
      get_url: url={{ item.url }} dest={{ item.dest }}
      with_items: '{{ downloads }}'

  handlers:
    - name: brew doctor
      command: brew doctor
    - name: brew cask doctor
      command: brew cask doctor
    - name: source
      command: source ~/.bashrc
